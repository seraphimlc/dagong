<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhong.mapper.ShareCommentsMapper" >
  <resultMap id="BaseResultMap" type="com.zhong.pojo.ShareComments" >
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <result column="shareInfoId" property="shareinfoid" jdbcType="INTEGER" />
    <result column="reCommentId" property="recommentid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="createDate" property="createdate" jdbcType="VARCHAR" />
    <result column="reCount" property="recount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    uid, shareInfoId, reCommentId, userId, content, createDate, reCount
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sharecomments
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sharecomments
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhong.pojo.ShareComments" >
    insert into sharecomments (uid, shareInfoId, reCommentId, 
      userId, content, createDate, 
      reCount)
    values (#{uid,jdbcType=INTEGER}, #{shareinfoid,jdbcType=INTEGER}, #{recommentid,jdbcType=INTEGER}, 
      #{userid,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{createdate,jdbcType=VARCHAR}, 
      #{recount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zhong.pojo.ShareComments" >
    insert into sharecomments
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="shareinfoid != null" >
        shareInfoId,
      </if>
      <if test="recommentid != null" >
        reCommentId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="createdate != null" >
        createDate,
      </if>
      <if test="recount != null" >
        reCount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="shareinfoid != null" >
        #{shareinfoid,jdbcType=INTEGER},
      </if>
      <if test="recommentid != null" >
        #{recommentid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=VARCHAR},
      </if>
      <if test="recount != null" >
        #{recount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhong.pojo.ShareComments" >
    update sharecomments
    <set >
      <if test="shareinfoid != null" >
        shareInfoId = #{shareinfoid,jdbcType=INTEGER},
      </if>
      <if test="recommentid != null" >
        reCommentId = #{recommentid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        createDate = #{createdate,jdbcType=VARCHAR},
      </if>
      <if test="recount != null" >
        reCount = #{recount,jdbcType=INTEGER},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhong.pojo.ShareComments" >
    update sharecomments
    set shareInfoId = #{shareinfoid,jdbcType=INTEGER},
      reCommentId = #{recommentid,jdbcType=INTEGER},
      userId = #{userid,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      createDate = #{createdate,jdbcType=VARCHAR},
      reCount = #{recount,jdbcType=INTEGER}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>